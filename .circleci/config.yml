version: 2.1

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# --------------- Parameters (from Github Actions) ---------------
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

# the continuation orb is required in order to use dynamic configuration
orbs:
  continuation: circleci/continuation@1.0.0

# our defined job, and its steps
jobs:
  set-packages-in-env:
    resource_class: small
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run: |
          echo "export TARGET_PACKAGES=$(node .circleci/scripts/getPackageNames.js '<< pipeline.parameters.GHA_Meta >>')" >> $BASH_ENV
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  setup-config:
    resource_class: small
    executor: continuation/default
    steps:
      - attach_workspace:
          at: .
      - run: |
          cat bash.env >> $BASH_ENV
      - run: | # debug
          printenv TARGET_PACKAGES
      - checkout # checkout code
        # https://discuss.circleci.com/t/dynamically-set-parameter-values-of-matrix/47172
      - run:
          name: Generate Pipeline continue_config.yml file
          command: |
            .circleci/scripts/generate_config.sh
      - continuation/continue:
          # use freshly updated config to continue
          configuration_path: .circleci/continue_config.yml

# our single workflow, that triggers the setup job defined above
workflows:
  setup:
    # Workflow run when CI was triggered from a GHAction
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - set-packages-in-env
      - setup-config:
          requires:
            - set-packages-in-env
